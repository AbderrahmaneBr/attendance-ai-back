version: '3.8'

services:
  mysql_db:
    image: mysql:8.0
    container_name: attendance-ai-mysql
    environment:
      TZ: Africa/Casablanca
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: attendance_ai_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin

    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 7000:80
    environment:
      PMA_HOST: mysql_db
      PMA_USER: admin
      PMA_PASSWORD: admin
    depends_on:
      mysql_db:
        condition: service_healthy

  attendance_app:
    build:
      context: .
      dockerfile: Dockerfile-dev
    # image: abderrahmanebr/attendance-ai-backend:1.0 # Comment out for dev
    container_name: attendance-ai-app
    ports:
      - "8080:8080"
    environment:
      TZ: Africa/Casablanca
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/attendance_ai_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET_NAME: attendance-ai-bucket
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DEVTOOLS_RESTART_ENABLED: "true" # Or remove if default is true in your setup

    volumes:
      - ./target/classes:/app/BOOT-INF/classes
      - ./src/main/resources:/app/BOOT-INF/classes
      - ~/.m2:/root/.m2

    command: ["java", "-jar", "/app/app.jar"] # This will run the 'base' JAR copied by Dockerfile-dev

    depends_on:
      mysql_db:
        condition: service_healthy
      minio:
        condition: service_healthy

  minio:
    image: minio/minio:latest
    container_name: attendance-ai-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 5s

volumes:
  mysql_data:
  minio_data: